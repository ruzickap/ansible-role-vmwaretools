---
# tasks file for vmwaretools/Ubuntu

- name: Check if the vmware-tools-esx-nox is not installed already
  command: /usr/bin/dpkg -l vmware-tools-esx-nox
  changed_when: false
  register: dpkg_result
  ignore_errors: true

- name: Only for Ubuntu [ 'lucid', 'natty', 'oneiric', 'precise' ]
  block:
    - name: Get the page wgere I can get the latest vmware package version if not predefined in vmwaretools_repo_version
      uri:
        url: "{{ vmwaretools_yum_server }}{{ vmwaretools_yum_path }}/esx/{{ vmwaretools_tools_version }}/repos/index.html"
        return_content: yes
      changed_when: false
      register: vmwaretools_web_page
      when: vmwaretools_repo_version is undefined

    - name: Get details about repository package version if vmwaretools_repo_version is undefined
      set_fact:
        vmwaretools_repo_version: "{{ vmwaretools_web_page.content | regex_findall('vmware-tools-repo-ubuntu' + ansible_distribution_version|string + '_(.*).' + ansible_distribution_release|string + '_.*.deb') | first | string }}"
      when: vmwaretools_repo_version is undefined

    # This needs to be separated because of differencies in repository names vs. architecture: x86_64 != amd64
    - name: Download vmware-tools repository file for x86_64/amd64 to /tmp
      get_url:
        url: "{{ vmwaretools_yum_server }}{{ vmwaretools_yum_path }}/esx/{{ vmwaretools_tools_version }}/repos/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}_amd64.deb"
        dest: /tmp/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}.deb
      when: ansible_architecture == 'x86_64'

    - name: Download vmware-tools repository file for i386 to /tmp
      get_url:
        url: "{{ vmwaretools_yum_server }}{{ vmwaretools_yum_path }}/esx/{{ vmwaretools_tools_version }}/repos/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}_{{ ansible_architecture }}.deb"
        dest: /tmp/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}.deb
      when: ansible_architecture == 'i386'

    - name: Install vmware-tools repository file
      apt:
        deb: /tmp/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}.deb
      register: result
      until: result is succeeded

    - name: Delete vmware-tools repository file from /tmp
      file:
        path: /tmp/vmware-tools-repo-ubuntu{{ ansible_distribution_version }}_{{ vmwaretools_repo_version }}.{{ ansible_distribution_release }}.deb
        state: absent

    - name: Add vmware-tools repository key
      apt_key:
        url: "{{ vmwaretools_yum_server }}{{ vmwaretools_yum_path }}/keys/VMWARE-PACKAGING-GPG-RSA-KEY.pub"
      register: result
      until: result is succeeded

    - name: Remove the open-vm-tools if they are installed not to block vmware-tools installation
      apt:
        name: open-vm-tools
        state: absent

    - name: Install vmware-tools
      apt:
        name: vmware-tools-esx-nox
        update_cache: yes
      register: result
      until: result is succeeded
  rescue:
    - name: Print when errors
      ansible.builtin.debug:
        msg: "I caught an error..."
  when: ansible_distribution_release in [ 'lucid', 'natty', 'oneiric', 'precise' ] and dpkg_result.stdout is search('no packages found')

- name: Installing Open VMware Tools (open-vm-tools) for non 'lucid', 'natty', 'oneiric', 'precise' Ubuntu systems
  apt:
    name: open-vm-tools
    update_cache: yes
  register: result
  until: result is succeeded
  when: not ansible_distribution_release in [ 'lucid', 'natty', 'oneiric', 'precise' ]
